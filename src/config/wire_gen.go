// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"github.com/google/wire"
	"github.com/kallepan/go-backend/app/controller"
	"github.com/kallepan/go-backend/app/repository"
	"github.com/kallepan/go-backend/app/service"
	"github.com/kallepan/go-backend/drivers"
)

// Injectors from injector.go:

func Init() *Initialization {
	sqlDB := drivers.ConnectToDB()
	systemRepositoryImpl := repository.SystemRepositoryInit()
	systemServiceImpl := service.SystemServiceInit(systemRepositoryImpl)
	systemControllerImpl := controller.SystemControllerInit(systemServiceImpl)
	userRepositoryImpl := repository.UserRepositoryInit(sqlDB)
	userServiceImpl := service.UserServiceInit(userRepositoryImpl)
	userControllerImpl := controller.UserControllerInit(userServiceImpl)
	initialization := NewInitialization(sqlDB, systemRepositoryImpl, systemServiceImpl, systemControllerImpl, userRepositoryImpl, userServiceImpl, userControllerImpl)
	return initialization
}

// injector.go:

/* Database */
var db = wire.NewSet(drivers.ConnectToDB)

/* system */
var (
	systemRepoSet  = wire.NewSet(repository.SystemRepositoryInit, wire.Bind(new(repository.SystemRepository), new(*repository.SystemRepositoryImpl)))
	systemSvcSet   = wire.NewSet(service.SystemServiceInit, wire.Bind(new(service.SystemService), new(*service.SystemServiceImpl)))
	systemCtrlrSet = wire.NewSet(controller.SystemControllerInit, wire.Bind(new(controller.SystemController), new(*controller.SystemControllerImpl)))
)

/* user */
var (
	userRepoSet  = wire.NewSet(repository.UserRepositoryInit, wire.Bind(new(repository.UserRepository), new(*repository.UserRepositoryImpl)))
	userSvcSet   = wire.NewSet(service.UserServiceInit, wire.Bind(new(service.UserService), new(*service.UserServiceImpl)))
	userCtrlrSet = wire.NewSet(controller.UserControllerInit, wire.Bind(new(controller.UserController), new(*controller.UserControllerImpl)))
)
